/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'application'
}

applicationDefaultJvmArgs = ["-Xms512m", "-Xmx1024m"]

repositories {
    jcenter()
}

// Set default broker if not specified from command line
def whichBroker = project.properties['broker']?:'ActiveMQ'

dependencies {
    compile 'ch.qos.logback:logback-classic:1.2.0'
    compile 'javax.jms:javax.jms-api:2.0'
    
    switch (whichBroker) {
        case "ActiveMQ":
            runtimeOnly 'org.apache.activemq:activemq-client:5.15.12'
            runtimeOnly 'org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:1.0.1'
            break;

        case "Artemis":
            runtimeOnly 'org.apache.activemq:artemis-jms-client-all:2.11.0'
            break;

        case "TIBCO":
            runtimeOnly files('local_libs/tibjms.jar') 
            break;

        case "IBM_MQ":
            runtimeOnly 'com.ibm.mq:com.ibm.mq.allclient:9.1.3.0'
            runtimeOnly files('local_libs/fscontext.jar','local_libs/providerutil.jar') 
            break;

        case "WebLogic":
            runtimeOnly files('local_libs/wlthint3client.jar')
            break;


        /* In case of different broker, please add a new 'case' here:
        case "<JMS_BROKER>":
            runtimeOnly '<DEP1>'
            ...
            runtimeOnly '<DEP_N>'

            break;

        where:
            JMS_BROKER
                is a generic string that identifies the broker for which this build is targeted. 
            DEP_X
                is the reference to the JMS broker-specific java library. If the library is not available
                on JCenter, please copy it under the "local_libs" folder, as already done with TIBCO.
        */
        
        default:
            println "No broker definition"
    }
}

version = '2.0.0'
sourceCompatibility = '1.8'
mainClassName = "jms_demo_services.App"
applicationDefaultJvmArgs = ["-Dbroker=$whichBroker"]

task makeFeedMessageJar(type:Jar, dependsOn: classes) {
    baseName = commonJarName
    from sourceSets.main.output.classesDirs.filter {
        include 'jms_demo_services/stocklist/FeedMessage.class'
    }
}

task buildDemo(type: Copy, dependsOn: [makeFeedMessageJar, installDist]) {
    description 'Copies the jar files to the build/deploy folder.'
    from ("$buildDir/install/$project.name/lib") {
        exclude "javax.jms-api-*.jar"
        exclude "logback-*.jar"
        exclude "slf4j-*.jar"
        exclude "$applicationName-*.jar"
    }
    from ("$libsDir") {
        include "$commonJarName-*.jar"
    }
    
    into "$buildDir/$deployDir"
}

